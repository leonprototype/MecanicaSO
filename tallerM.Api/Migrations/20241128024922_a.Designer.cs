// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tallerM.Api;

#nullable disable

namespace tallerM.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241128024922_a")]
    partial class a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tallerM.Shared.Entities.Automovil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Automoviles");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.CambioPieza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRefaccion")
                        .HasColumnType("int");

                    b.Property<string>("Pieza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRefaccion");

                    b.ToTable("CambioPiezas");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.DetalleServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int?>("IdCambioPieza")
                        .HasColumnType("int");

                    b.Property<bool>("usoRefaccion")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCambioPieza");

                    b.ToTable("DetalleServicios");

                    b.HasDiscriminator().HasValue("DetalleServicio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Mecanico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Mecanicos");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Refaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Refacciones");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Servicio", b =>
                {
                    b.HasBaseType("tallerM.Shared.Entities.DetalleServicio");

                    b.Property<int>("AutomovilId")
                        .HasColumnType("int");

                    b.Property<int>("MecanicoId")
                        .HasColumnType("int");

                    b.HasIndex("AutomovilId");

                    b.HasIndex("MecanicoId");

                    b.HasDiscriminator().HasValue("Servicio");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Automovil", b =>
                {
                    b.HasOne("tallerM.Shared.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.CambioPieza", b =>
                {
                    b.HasOne("tallerM.Shared.Entities.Refaccion", "Refaccion")
                        .WithMany()
                        .HasForeignKey("IdRefaccion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Refaccion");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.DetalleServicio", b =>
                {
                    b.HasOne("tallerM.Shared.Entities.CambioPieza", "CambioPieza")
                        .WithMany()
                        .HasForeignKey("IdCambioPieza")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CambioPieza");
                });

            modelBuilder.Entity("tallerM.Shared.Entities.Servicio", b =>
                {
                    b.HasOne("tallerM.Shared.Entities.Automovil", "Automovil")
                        .WithMany()
                        .HasForeignKey("AutomovilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tallerM.Shared.Entities.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("MecanicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Mecanico");
                });
#pragma warning restore 612, 618
        }
    }
}
